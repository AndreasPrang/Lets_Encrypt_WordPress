version: '3.2'
services:
   proxy:
     image: jwilder/nginx-proxy
     ports:
       - 80:80
       - 443:443
     volumes:
       - /opt/wp/proxy/conf.d:/etc/nginx/conf.d
       - /opt/wp/proxy/vhost.d:/etc/nginx/vhost.d
       - /opt/wp/proxy/html:/usr/share/nginx/html
       - /opt/wp/proxy/certs:/etc/nginx/certs:ro
       - /var/run/docker.sock:/tmp/docker.sock:ro
     networks:
       - proxy-tier

   letsencrypt-companion:
     image: jrcs/letsencrypt-nginx-proxy-companion
     volumes:
       - /opt/wp/proxy/conf.d:/etc/nginx/conf.d
       - /opt/wp/proxy/vhost.d:/etc/nginx/vhost.d
       - /opt/wp/proxy/html:/usr/share/nginx/html
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - /opt/wp/proxy/certs:/etc/nginx/certs:rw

     environment:
       - LETSENCRYPT_TEST=TRUE
       - NGINX_PROXY_CONTAINER=proxy

   wordpress:
     depends_on:
       - db
     image: wordpress:latest
     restart: always
     environment:
       - WORDPRESS_DB_HOST=db:3306
       - WORDPRESS_DB_USER=wordpress
       - WORDPRESS_DB_PASSWORD=wordpress
       - VIRTUAL_HOST=www.domain.ltd
       - VIRTUAL_NETWORK=nginx-proxy
       - VIRTUAL_PORT=80
       - LETSENCRYPT_HOST=www.domain.ltd
       - LETSENCRYPT_EMAIL=webmaster@domain.ltd
     networks:
       - proxy-tier


   db:
     image: mysql:5.7
     volumes:
       - /opt/wp/db_data:/var/lib/mysql
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: somewordpress
       MYSQL_DATABASE: wordpress
       MYSQL_USER: wordpress
       MYSQL_PASSWORD: wordpress
     networks:
       - proxy-tier

networks:
  proxy-tier:
